doctype html
html
  head
    meta(charset="utf-8")
    title MarkPad
    style.
      html, body, #editor {
        margin: 0;
        height: 100%;
        font-family: 'Helvetica Neue', Arial, sans-serif;
        color: #333;
      }
      textarea, #editor div {
        display: inline-block;
        width: 49.8%;
        height: 100%;
        vertical-align: top;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        padding: 0 20px;
        overflow-y: auto;
      }
      textarea {
        border: none;
        border-right: 1px solid #ccc;
        resize: none;
        outline: none;
        background-color: #f6f6f6;
        font-size: 15px;
        font-family: 'Monaco', courier, monospace;
        padding: 20px;
      }
      code {
        color: #f66;
      }
  body
    #editor
      textarea#textarea(disabled="disabled", v-on="mouseover: mousein, mouseout: mouseout, scroll: scroll, textInput: input, keydown: input, keyup: input, select: input, cut: input, paste: input") !{base_data}
      div#preview(v-on="mouseover: mousein, mouseout: mouseout, scroll: scroll")
    script(src="vue.min.js")
    script(src="marked.min.js")
    script(src="xss.min.js")
    script(src="md5.min.js")
    script(src="socket.io.min.js")
    script(src="op.js")
    script.
      var socket = io("/#{room_id}");
      var old_data = document.getElementById("textarea").value;      
      var focus = null;
      
      var preview = function (data) {
        document.getElementById("preview").innerHTML = filterXSS(marked(old_data));
      }

      socket.on('connection', function(){
        document.getElementById("textarea").removeAttribute("disabled");
      });
        
      socket.on('change', function(changes){
        old_data = data = OP.applyChanges(document.getElementById("textarea").value, changes);
        document.getElementById("textarea").value = data;
        preview(data);
      });

      new Vue({
        el: '#editor',
        methods: {
          input: function (e) {
            data = e.srcElement.value;
            changes = OP.diffString(old_data, data);
            if(changes.length === 0) return;
            socket.emit('change', {
              h: md5(old_data),
              c: changes
            });
            old_data = data;
            preview(data);
          },
          scroll: function (e) {
              var percent, child, i;
              percent = e.target.scrollTop / e.target.scrollHeight;
              for (i = 0; i< e.targetVM.$el.children.length; i++) {
                child = e.targetVM.$el.children[i];
                if (focus != child.localName && child.localName != e.target.localName) {
                  child.scrollTop = percent * child.scrollHeight;
                }
              }
            },
          mousein: function (e) {
            focus = e.target.localName;
            if (focus != 'textarea')
              focus = 'div';
            },
          mouseout: function (e) {
            focus = null;
          }
        }
      });
